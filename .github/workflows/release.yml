name: Release

on:
  push:
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read

jobs:
  Release-Build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      attestations: write
      id-token: write
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-apple-darwin
        rustup_toolchain: [stable]
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: macos-14
            target: aarch64-apple-darwin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rustup_toolchain }}

      - name: Cargo build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Show version
        run: ./target/${{ matrix.target }}/release/ds-mod --version

      - name: Archive (UNIX)
        run: |
          mkdir -p artifacts
          cp -av target/${{ matrix.target }}/release/ds-mod artifacts/
          cp -av target/${{ matrix.target }}/release/ds-sys artifacts/
          tar -czf ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}.tar.gz  artifacts
        if: ${{ ! startsWith(matrix.os, 'windows') }}

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2
        continue-on-error: true
        with:
          subject-path: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}.*

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}
          path: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.target }}.*
          if-no-files-found: error
          retention-days: 7

  Release:
    needs: [Release-Build]
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: Ensure artifacts dir exists
        run: mkdir -p artifacts

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          body: |
            Welcome to this new release of GalaxyFlow ${{ github.ref_name }}!

            All artifacts are signed with this repos identity using Sigstore.
            You can verify the signatures using the `GitHub` CLI.

            ```shell
            gh attestation verify --owner ${{ github.repository_owner }} <my-artifact>
            ```
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, '-pre') }}
          files: artifacts/*
